/*
 * slush-burp
 * https://github.com/acauamontiel/slush-burp
 *
 * Copyright (c) 2014, Acau√£ Montiel
 * Licensed under the MIT license.
 */

'use strict';

var gulp = require('gulp'),
	install = require('gulp-install'),
	conflict = require('gulp-conflict'),
	template = require('gulp-template'),
	rename = require('gulp-rename'),
	_ = require('underscore.string'),
	inquirer = require('inquirer'),
	done;

var burp = {
	prompts: function () {
		var questions = [
			{
				type: 'input',
				name: 'appName',
				message: 'What is the name of your app?',
				default: gulp.args.join(' ')
			}, {
				type: 'input',
				name: 'appDescription',
				message: 'What is the description for your app?'
			}, {
				type: 'list',
				name: 'appVersion',
				message: 'Which BURP version do you want to use?',
				choices: [
					{
						key: 'd',
						name: 'Default',
						value: 'default'
					}, {
						key: 'b',
						name: 'Basic',
						value: 'basic'
					}, {
						key: 'c',
						name: 'Custom',
						value: false
					}
				]
			}, {
				type: 'confirm',
				name: 'html',
				message: 'Do you want to use Jade?',
				default: true,
				when: function (props) {
					return !props.appVersion;
				}
			}, {
				type: 'confirm',
				name: 'css',
				message: 'Do you want to use Stylus?',
				default: true,
				when: function (props) {
					return !props.appVersion;
				}
			}, {
				type: 'list',
				name: 'jsLib',
				message: 'Which JS lib do you want to use?',
				choices: [
					{
						key: 'm',
						name: 'Mantis.js (alpha version)',
						value: 'mantis-js'
					},
					{
						key: 'j1',
						name: 'jQuery 1.*',
						value: 'jquery-1'
					},
					{
						key: 'j2',
						name: 'jQuery 2.*',
						value: 'jquery-2'
					},
					{
						key: 'z',
						name: 'Zepto.js',
						value: 'zepto-js'
					},
					{
						key: 'n',
						name: 'None',
						value: false
					},
				],
				when: function (props) {
					return !props.appVersion;
				}
			}
		];

		return questions;
	},

	ask: function () {
		inquirer.prompt(burp.prompts(), function (answers) {
			answers.appName = answers.appName || 'BURP Template';
			answers.appDescription = answers.appDescription || 'Template generated by BURP Generator';
			answers.appNameSlug = _.slugify(answers.appName);

			if (answers.appVersion) {
				answers.jsLib = 'mantis-js';
				answers.html = answers.css = (answers.appVersion === 'default');
			}

			burp.files.common();
			burp.files.template(answers);
		});
	},

	files: {
		common: function () {
			gulp.src(__dirname + '/templates/common/**/*', {base: __dirname + '/templates/common/'})
				.pipe(rename(function (file) {
					if (file.basename[0] === '_') {
						file.basename = '.' + file.basename.slice(1);
					}
				}))
				.pipe(conflict('./'))
				.pipe(gulp.dest('./'))
		},

		template: function (answers) {
			if (answers.html) {
				gulp.src(__dirname + '/templates/html/jade/**/*', {base: __dirname + '/templates/html/jade/'})
					.pipe(template(answers))
					.pipe(conflict('./src/html/'))
					.pipe(gulp.dest('./src/html/'));
			} else {
				gulp.src(__dirname + '/templates/html/raw/*', {base: __dirname + '/templates/html/raw/'})
					.pipe(template(answers))
					.pipe(conflict('./src/'))
					.pipe(gulp.dest('./src/'));
			}

			if (answers.css) {
				gulp.src(__dirname + '/templates/css/stylus/**/*', {base: __dirname + '/templates/css/stylus/'})
					.pipe(conflict('./src/css/'))
					.pipe(gulp.dest('./src/css/'));
			} else {
				gulp.src(__dirname + '/templates/css/raw/*', {base: __dirname + '/templates/css/raw/'})
					.pipe(conflict('./src/css/'))
					.pipe(gulp.dest('./src/css/'));
			}

			gulp.src(__dirname + '/templates/template/**/*', {base: __dirname + '/templates/template/'})
				.pipe(template(answers))
				.pipe(conflict('./'))
				.pipe(gulp.dest('./'))
				.pipe(install())
				.on('end', function () {
					done();
				});
		}
	},

	init: function () {
		gulp.task('default', function (callback) {
			done = callback;
			burp.ask();
		});
	}
};

burp.init();
